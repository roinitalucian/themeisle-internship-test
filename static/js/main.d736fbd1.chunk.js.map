{"version":3,"sources":["components/box/Box.js","components/popUp/popUp.js","components/container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","d","Date","date","className","onClick","selectHandler","src","image","alt","title","content","author","role","toLocaleString","year","month","day","PopUp","entry","closeHandler","class","large","undefined","avatar","Container","useState","selectedObject","database","showPopUp","data","setData","fetch","then","response","json","selectEntry","map","item","index","thumbnail","small","name","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAsCeA,G,MAlCH,SAACC,GACT,IAAIC,EAAI,IAAIC,KAAkB,IAAbF,EAAMG,MACvB,OACI,sBAAKC,UAAU,qBAAf,UACI,qBAAKA,UAAU,UAAf,SACI,8CAEJ,qBAAKA,UAAU,kBAAkBC,QAAS,WAAOL,EAAMM,cAAcN,IAArE,SACA,qBAAKO,IAAKP,EAAMQ,MAAOC,IAAI,UAG3B,sBAAKL,UAAU,mBAAf,UACI,sBAAMA,UAAU,oBAAhB,eACA,sBAAMA,UAAU,2BAGpB,sBAAKA,UAAU,iBAAf,UACI,6BAAKJ,EAAMU,QACX,4BAAIV,EAAMW,aAGd,sBAAKP,UAAU,8CAAf,UACI,8BACI,8BAAIJ,EAAMY,OAAV,MAAqBZ,EAAMa,UAG/B,8BACI,4BAAIZ,EAAEa,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,wBCF3EC,G,MAzBD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACpB,OACI,sBAAKhB,UAAU,kBAAf,UACI,qBAAKA,UAAU,YAAf,SACI,sBAAMiB,MAAM,QAAQhB,QAAS,kBAAMe,SAEvC,qBAAKhB,UAAU,cAAf,SACI,qBAAKG,IAAKY,EAAMG,MAAOb,IAAI,gBAE/B,sBAAKL,UAAU,aAAf,UACI,6BAAKe,EAAMT,QACX,4BAAIS,EAAMR,aAEd,sBAAKP,UAAU,eAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKG,SAAsBgB,IAAjBJ,EAAMK,OAAuB,kCAAoCL,EAAMK,OAAQf,IAAI,aAEjG,sBAAKL,UAAU,cAAf,UACKe,EAAMP,OADX,MACsBO,EAAMN,gBC2B7BY,G,MA5CG,WAAO,IAAD,EAEIC,mBAAS,CAACC,eAAgB,GAAIC,SAAU,GAAIC,WAAW,IAF3D,mBAEbC,EAFa,KAEPC,EAFO,KAIpBL,oBAAS,WACLM,MAAM,+EACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAhC,GAAC,OAAI8B,EAAQ,2BAAID,GAAL,IAAWF,SAAU3B,UAC5C,IAEH,IAAMmC,EAAc,SAACjB,GAEjBY,EAAQ,2BAAID,GAAL,IAAWH,eAAgBR,EAAOU,WAAW,MAOxD,OACI,gCACI,qBAAKzB,UAAU,gBAAf,SACK0B,EAAKF,SAASS,KAAI,SAACC,EAAMC,GAAP,OACf,cAAC,EAAD,CACI7B,MAAO4B,EAAK5B,MACZC,QAAS2B,EAAK3B,QACdH,MAAO8B,EAAKE,UAAUC,MACtB7B,OAAQ0B,EAAK1B,OAAO8B,KACpB7B,KAAMyB,EAAK1B,OAAOC,KAClBV,KAAMmC,EAAKnC,KAEXG,cAAe8B,EACfZ,OAAQc,EAAK1B,OAAOY,OACpBF,MAAOgB,EAAKE,UAAUlB,OAHjBiB,QAOhBT,EAAKD,UAAY,qBAAKzB,UAAU,iBAAoB,IACpD0B,EAAKD,UAAY,cAAC,EAAD,CAAOV,MAAOW,EAAKH,eAAgBP,aAvB3C,WACdW,EAAQ,2BAAID,GAAL,IAAWD,WAAW,QAsB0D,SCpChFc,EAJH,WACV,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d736fbd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Box.css';\r\n\r\n\r\nconst Box = (props) => {\r\n    var d = new Date(props.date * 1000);\r\n    return(\r\n        <div className='flex-container box'>\r\n            <div className='overlay'>\r\n                <h2>Learn More</h2>\r\n            </div>\r\n            <div className='flex-item image' onClick={() => {props.selectHandler(props)}}>\r\n            <img src={props.image} alt='img'/>\r\n            </div>\r\n\r\n            <div className='flex-item shapes'>\r\n                <span className='circle circleBlue'> </span>\r\n                <span className='circle circleYellow' />\r\n            </div>\r\n\r\n            <div className='flex-item text'>\r\n                <h2>{props.title}</h2>\r\n                <p>{props.content}</p>\r\n            </div>\r\n\r\n            <div className='flex-item flex-container flex-container-row'>\r\n                <div>\r\n                    <p>{props.author} - {props.role}</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>{d.toLocaleString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Box;","import React from 'react';\r\nimport './popUp.css';\r\n\r\n\r\nconst PopUp = ({ entry, closeHandler }) => {\r\n    return(\r\n        <div className='popUp-container'>\r\n            <div className='popUp-bar'>\r\n                <span class=\"close\" onClick={() => closeHandler()} />\r\n            </div>\r\n            <div className='popUp-image'>\r\n                <img src={entry.large} alt='large img' />\r\n            </div>\r\n            <div className='popUp-text'>\r\n                <h2>{entry.title}</h2>\r\n                <p>{entry.content}</p>\r\n            </div>\r\n            <div className='popUp-footer'>\r\n                <div className='author-image'>\r\n                    <img src={entry.avatar === undefined ? 'https://i.imgur.com/FPVHNhg.jpg' : entry.avatar} alt='avatar' />\r\n                </div>\r\n                <div className='author-name'>\r\n                    {entry.author} - {entry.role}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PopUp;","import React, { useState } from 'react';\r\nimport Box from '../box/Box';\r\nimport PopUp from '../popUp/popUp'\r\nimport './Container.css';\r\n\r\nconst Container = () => {\r\n\r\n    const [data, setData] = useState({selectedObject: {}, database: [], showPopUp: false});\r\n\r\n    useState(() => {\r\n        fetch('https://my-json-server.typicode.com/Codeinwp/front-end-internship-api/posts')\r\n            .then(response => response.json())\r\n            .then(d => setData({...data, database: d}));\r\n    }, []);\r\n\r\n    const selectEntry = (entry) => {\r\n        // console.log(entry.avatar);\r\n        setData({...data, selectedObject: entry, showPopUp: true});\r\n    };\r\n\r\n    const hidePopUp = () => {\r\n        setData({...data, showPopUp: false});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='box-container'>\r\n                {data.database.map((item, index) => (\r\n                    <Box\r\n                        title={item.title}\r\n                        content={item.content}\r\n                        image={item.thumbnail.small}\r\n                        author={item.author.name}\r\n                        role={item.author.role}\r\n                        date={item.date}\r\n                        key={index}\r\n                        selectHandler={selectEntry}\r\n                        avatar={item.author.avatar}\r\n                        large={item.thumbnail.large}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {data.showPopUp ? <div className='overlayColor' /> : ' '}\r\n            {data.showPopUp ? <PopUp entry={data.selectedObject} closeHandler={hidePopUp} /> : ' '}\r\n        </div>\r\n    \r\n    );\r\n};\r\n\r\nexport default Container;","import './App.css';\nimport Container from './components/container/Container';\n\nconst App = () => {\n  return <Container />\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}